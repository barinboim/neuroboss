"use client";

import React, { useState, useEffect } from "react";

// Little helper: inject Google Fonts into <head>
function FontLoader() {
  useEffect(() => {
    const link = document.createElement("link");
    link.rel = "stylesheet";
    link.href =
      "https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Montserrat:wght@700;800;900&display=swap";
    document.head.appendChild(link);
    return () => document.head.removeChild(link);
  }, []);
  return null;
}

export default function App() {
  const [project, setProject] = useState("");
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [data, setData] = useState<
    | null
    | {
        frameworks: { name: string; steps: string[]; why: string }[];
        quote: { text: string; author: string };
      }
  >(null);

  async function onGenerate(e?: React.FormEvent) {
    e?.preventDefault();
    setError(null);
    setData(null);

    const trimmed = project.trim();
    if (!trimmed) {
      setError("–°–Ω–∞—á–∞–ª–∞ –æ–ø–∏—à–∏, –∫–∞–∫–æ–π –ø—Ä–æ–µ–∫—Ç –¥–µ–ª–∞–µ—à—å ‚úçÔ∏è");
      return;
    }

    setLoading(true);
    try {
      const res = await fetch("/api/neuroboss", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ project: trimmed }),
      });

      if (!res.ok) {
        const msg = await res.text();
        throw new Error(msg || "Server error");
      }

      const json = await res.json();
      setData(json);
    } catch (err: any) {
      console.error(err);
      // Friendly fallback when API route isn't set up yet
      setData({
        frameworks: [
          {
            name: "AIDA –∫–æ–Ω—Ç–µ–Ω—Ç‚Äë–≤–æ—Ä–æ–Ω–∫–∞",
            steps: [
              "Attention: –∫—Ä—é—á–æ–∫ –≤ –ø–µ—Ä–≤–æ–º —ç–∫—Ä–∞–Ω–µ",
              "Interest: –±–æ–ª—å –∞—É–¥–∏—Ç–æ—Ä–∏–∏ –≤ 3 —Ñ–∞–∫—Ç–∞—Ö",
              "Desire: –º–∏–Ω–∏‚Äë–∫–µ–π—Å—ã –∏ –≤—ã–≥–æ–¥—ã",
              "Action: –æ–¥–∏–Ω —á—ë—Ç–∫–∏–π –ø—Ä–∏–∑—ã–≤",
            ],
            why: "–ü—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞, –±—ã—Å—Ç—Ä–æ —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –ø–æ–¥ –ª—é–±–æ–π –ø—Ä–æ–µ–∫—Ç",
          },
          {
            name: "JTBD (—Ä–∞–±–æ—Ç—ã, —Ä–∞–¥–∏ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞–Ω–∏–º–∞—é—Ç –ø—Ä–æ–¥—É–∫—Ç)",
            steps: [
              "–û–ø—Ä–µ–¥–µ–ª–∏ –∑–∞–¥–∞—á—É, –∫–æ—Ç–æ—Ä—É—é ‚Äò–Ω–∞–Ω–∏–º–∞–µ—Ç‚Äô —Ç–≤–æ–π –ø—Ä–æ–¥—É–∫—Ç",
              "–û–ø–∏—à–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ —Ç—Ä–∏–≥–≥–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è",
              "–°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π –±–∞—Ä—å–µ—Ä—ã –∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã",
              "–°–æ–±–µ—Ä–∏ –æ—Ñ—Ñ–µ—Ä –ø–æ–¥ –∫–ª—é—á–µ–≤—É—é ‚Äò—Ä–∞–±–æ—Ç—É‚Äô",
            ],
            why: "–î–∞—ë—Ç —á—ë—Ç–∫–∏–π —Ñ–æ–∫—É—Å –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é —Ü–µ–Ω–Ω–æ—Å—Ç—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
          },
          {
            name: "–î–∏–∞–ª–µ–∫—Ç–∏–∫–∞ –ì–µ–≥–µ–ª—è",
            steps: [
              "–¢–µ–∑–∏—Å: –ø–æ–∑–∏—Ü–∏—è ‚Äò–∑–∞‚Äô",
              "–ê–Ω—Ç–∏—Ç–µ–∑–∏—Å: –ø–æ–∑–∏—Ü–∏—è ‚Äò–ø—Ä–æ—Ç–∏–≤‚Äô",
              "–°–∏–Ω—Ç–µ–∑: –ø—Ä–∏–º–∏—Ä–µ–Ω–∏–µ –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–≤–æ–¥",
              "CTA: —á—Ç–æ —á–∏—Ç–∞—Ç–µ–ª—å –¥–µ–ª–∞–µ—Ç –¥–∞–ª—å—à–µ",
            ],
            why: "–í—Å–µ–≥–¥–∞ –ø–æ–ª—É—á–∞–µ—Ç—Å—è —Ü–µ–ª—å–Ω—ã–π –∏ ‚Äò—É–º–Ω—ã–π‚Äô –º–∞—Ç–µ—Ä–∏–∞–ª –±–µ–∑ –≤–æ–¥—ã",
          },
        ],
        quote: {
          text: "–£—Å–ø–µ—Ö ‚Äî —ç—Ç–æ —Å—É–º–º–∞ –º–∞–ª–µ–Ω—å–∫–∏—Ö —É—Å–∏–ª–∏–π, –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è –∏–∑–æ –¥–Ω—è –≤ –¥–µ–Ω—å.",
          author: "–†–æ–±–µ—Ä—Ç –ö–æ–ª–ª—å–µ—Ä",
        },
      });
      setError(
        "–ü–æ—Ö–æ–∂–µ, —Å–µ—Ä–≤–µ—Ä–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –ø–æ–∫–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ü–æ–∫–∞–∑–∞–ª –¥–µ–º–æ‚Äë–ø—Ä–∏–º–µ—Ä; —Å–º. –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤–Ω–∏–∑—É —Ñ–∞–π–ª–∞, –∫–∞–∫ –ø–æ–¥–∫–ª—é—á–∏—Ç—å OpenAI."
      );
    } finally {
      setLoading(false);
    }
  }

  return (
    <div
      className="min-h-screen w-full"
      style={{ backgroundColor: "#2A2A36" }}
    >
      <FontLoader />
      <div className="mx-auto max-w-3xl px-6 py-12">
        <header className="mb-8">
          <h1
            className="text-3xl md:text-4xl font-black tracking-tight"
            style={{ color: "#E7FF71", fontFamily: "Montserrat, sans-serif" }}
          >
            ü§ñ –ù–µ–π—Ä–æ–±–æ—Å—Å
          </h1>
          <p
            className="mt-2 text-base/7 md:text-lg/7 text-white/90"
            style={{ fontFamily: "Inter, system-ui, -apple-system, Segoe UI, Arial" }}
          >
            –ü–æ–¥—Å–∫–∞–∂—É 3 —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ –ø–æ–¥ —Ç–≤–æ–π –ø—Ä–æ–µ–∫—Ç –∏ –¥–æ–±–∞–≤–ª—é –æ–±–æ–¥—Ä—è—é—â—É—é —Ü–∏—Ç–∞—Ç—É
          </p>
        </header>

        <form
          onSubmit={onGenerate}
          className="rounded-2xl border border-white/10 bg-white/5 backdrop-blur p-5 md:p-6 shadow-[0_10px_30px_rgba(0,0,0,0.25)]"
        >
          <label
            htmlFor="project"
            className="block text-sm font-medium mb-2 text-white/90"
            style={{ fontFamily: "Inter, system-ui" }}
          >
            –ö–∞–∫–æ–π —Ç—ã –¥–µ–ª–∞–µ—à—å –ø—Ä–æ–µ–∫—Ç?
          </label>
          <div className="flex flex-col md:flex-row gap-3">
            <input
              id="project"
              value={project}
              onChange={(e) => setProject(e.target.value)}
              placeholder="–ù–∞–ø—Ä.: –¢–ì‚Äë–∫–∞–Ω–∞–ª –¥–ª—è –¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤, –æ–Ω–ª–∞–π–Ω‚Äë–∫—É—Ä—Å –ø–æ –ò–ò, MVP‚Äë—Å–µ—Ä–≤–∏—Å‚Ä¶"
              className="flex-1 rounded-xl px-4 py-3 bg-white/10 text-white placeholder-white/50 outline-none border border-white/10 focus:border-white/30"
              style={{ fontFamily: "Inter, system-ui" }}
            />
            <button
              type="submit"
              disabled={loading}
              className="shrink-0 inline-flex items-center justify-center rounded-xl px-5 py-3 font-semibold text-[#2A2A36] transition active:scale-[.98] disabled:opacity-60"
              style={{ backgroundColor: "#E7FF71", fontFamily: "Inter, system-ui" }}
            >
              {loading ? "–ì–µ–Ω–µ—Ä–∏—Ä—É—é‚Ä¶" : "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å"}
            </button>
          </div>
          {error && (
            <p className="mt-3 text-sm text-red-300" style={{ fontFamily: "Inter" }}>
              {error}
            </p>
          )}
        </form>

        {data && (
          <main className="mt-8 space-y-6">
            <section className="grid md:grid-cols-3 gap-4">
              {data.frameworks.map((fw, i) => (
                <article
                  key={i}
                  className="rounded-2xl border border-white/10 bg-white/5 p-4 text-white"
                  style={{ fontFamily: "Inter, system-ui" }}
                >
                  <h3
                    className="text-lg font-bold mb-2"
                    style={{ color: "#E7FF71", fontFamily: "Montserrat, sans-serif" }}
                  >
                    {fw.name}
                  </h3>
                  <ul className="list-disc pl-4 text-white/90 text-sm space-y-1">
                    {fw.steps.map((s, idx) => (
                      <li key={idx}>{s}</li>
                    ))}
                  </ul>
                  <p className="mt-3 text-white/80 text-sm">{fw.why}</p>
                </article>
              ))}
            </section>

            <section className="rounded-2xl border border-white/10 bg-white/5 p-5">
              <p className="text-white text-base md:text-lg" style={{ fontFamily: "Inter" }}>
                <span className="opacity-80">‚ú¶ –¶–∏—Ç–∞—Ç–∞ –¥–Ω—è:</span>
                <br />
                <em className="opacity-95">‚Äú{data.quote.text}‚Äù</em>
                <span className="opacity-80"> ‚Äî {data.quote.author}</span>
              </p>
            </section>
          </main>
        )}

        <footer className="mt-10 text-xs text-white/50" style={{ fontFamily: "Inter" }}>
          ¬© {new Date().getFullYear()} –ù–µ–π—Ä–æ–±–æ—Å—Å. –°–¥–µ–ª–∞–Ω–æ —Å ‚ù§Ô∏è –∏ OpenAI.
        </footer>
      </div>
    </div>
  );
}

